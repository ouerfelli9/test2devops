pipeline {
    agent any
    environment {
        registry = "ouerfelli9/operateur2"
        registryCredential = 'docker_hub_id'
        dockerImage = ''
    }

stages {
    
    /*stage("Run the container with ANSIBLE"){
                              steps {
                                  sh 'ansible-playbook ansible.yml'
                                     }
                         }*/
        
    
      
       /* stage('Git stage') {
          
            steps {
                echo "Getting project form github";
                 git branch: 'operateur2',
                 url : 'https://github.com/ouerfelli9/test2devops';
                 
               
            }
        }*/
        
        //}
        
        stage('MVN clean stage') {
          
            steps {
            sh 'mvn clean'
               
            }
        }
        
        

        stage('MVN install stage') {
          
            steps {
            sh 'mvn install'
               
            }
        }
        
        

        stage('MVN COMPILE stage') {
          
            steps {
            sh 'mvn compile'
               
            }
        }
        
          stage('MVN TEST Mockito <JUnit5>') {
          
            steps {
            sh 'mvn test'
               
            }
        }
        
         
    
        stage('SonarQube Quality Check') {
          
            steps {
            sh'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar'
               
            }
        }
        
      
        
        stage('Nexus deploy') {
          
            steps {
            sh 'mvn deploy'
               }
        } 

        
     	 stage('Building our image') {
            steps {
                script {
                    dockerImage = docker.build registry + ":$BUILD_NUMBER"
                }
            }
        }
        
        stage('Deploy our image to Docker_Hub') {
            steps {
                script {
                    docker.withRegistry( '', registryCredential ) {
                        dockerImage.push()
                    }
                }
            }
        } 
        
          stage('docker compose stage') {
          
            steps {
            sh 'docker-compose up -d'
               }
        }          
        
    }
    post {

                    success {
                        mail to: "oussema.ouerfelli@esprit.tn",
                        body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n, More info at: ${env.BUILD_URL}",
                        from: 'oussema.ouerfelli@esprit.tn',
                        subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}"
                    }

                    failure{
                        mail to: "oussema.ouerfelli@esprit.tn",
                        subject: "Jenkins build:${currentBuild.currentResult}: ${env.JOB_NAME}",
                        from: 'oussema.ouerfelli@esprit.tn',
                        body: "${currentBuild.currentResult}: Job ${env.JOB_NAME}\nMore Info can be found here: ${env.BUILD_URL}"
                    }

                    changed{
                        mail to: "oussema.ouerfelli@esprit.tn",
                        subject: "Jenkins build:${currentBuild.currentResult}: ${env.JOB_NAME}",
                        from: 'oussema.ouerfelli@esprit.tn',
                        body: "${currentBuild.currentResult}: Job ${env.JOB_NAME}\nMore Info can be found here: ${env.BUILD_URL}"
                    }
                }
    
}